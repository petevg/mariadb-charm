#!/usr/bin/env python3

import os
import sys
import uuid

sys.path.insert(0, os.path.join(os.environ['CHARM_DIR'], 'lib'))

from charmhelpers import fetch
from charmhelpers.core import hookenv

hooks = hookenv.Hooks()
log = hookenv.log
config = hookenv.config()
PASSFILE = "/var/lib/mysql/mysql.passwd"

''' Do all preinstallation work here, as the app is installed in config-changed
    hook to handle repository updates, and code de-duplication '''
@hooks.hook('install')
def install():
    fetch.apt_update()

    packages = ['debconf-utils',
                'python-mysqldb',
                'uuid',
                'pwgen',
                'dnsutils']
    fetch.apt_install(packages)
    admin_maria()

def admin_maria():
    # If there is no existing ${PASSFILE}, use the UUID command to generate a
    # new MariaDB root user password and store it in the ${PASSFILE}
    varpath = os.path.join(os.path.sep, 'var', 'lib', 'mysql')
    if not os.path.exists(PASSFILE):
        try:
            os.makedirs(varpath)
            with open(PASSFILE, 'a'):
                os.utime(PASSFILE, None)
            os.chmod(PASSFILE, 0o600)
        except:
            pass
        # Touch the passfile

    with open(PASSFILE, 'a') as fd:
        fd.seek(0, os.SEEK_END)
        if fd.tell() == 0:
            fd.seek(0)
            fd.write(str(uuid.uuid4()))
    etc_path = os.path.join(os.path.sep, 'etc', 'mysql', 'conf.d')
    if not os.path.exists(etc_path):
        os.makedirs(os.path.join(os.path.sep, 'etc', 'mysql', 'conf.d'))


if __name__ == "__main__":
    # execute a hook based on the name the program is called by
    hooks.execute(sys.argv)
